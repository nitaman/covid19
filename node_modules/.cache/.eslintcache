[{"/Users/dailytohoku/AWS/react/covid/src/index.js":"1","/Users/dailytohoku/AWS/react/covid/src/reportWebVitals.js":"2","/Users/dailytohoku/AWS/react/covid/src/App.js":"3","/Users/dailytohoku/AWS/react/covid/src/covid-news.js":"4","/Users/dailytohoku/AWS/react/covid/src/covid-carrier-number.js":"5","/Users/dailytohoku/AWS/react/covid/src/covid-patient-data.js":"6","/Users/dailytohoku/AWS/react/covid/src/covid-carrier-status.js":"7","/Users/dailytohoku/AWS/react/covid/src/covid-advice-center.js":"8","/Users/dailytohoku/AWS/react/covid/src/covid-call-center.js":"9","/Users/dailytohoku/AWS/react/covid/src/lib.js":"10","/Users/dailytohoku/AWS/react/covid/src/covid-tested-number.js":"11","/Users/dailytohoku/AWS/react/covid/src/side-menu.js":"12","/Users/dailytohoku/AWS/react/covid/src/drawer.js":"13","/Users/dailytohoku/AWS/react/covid/src/footer.js":"14","/Users/dailytohoku/AWS/react/covid/src/Menu.js":"15","/Users/dailytohoku/AWS/react/covid/src/Home.js":"16","/Users/dailytohoku/AWS/react/covid/src/Drawer.js":"17","/Users/dailytohoku/AWS/react/covid/src/menu.js":"18","/Users/dailytohoku/AWS/react/covid/src/home.js":"19","/Users/dailytohoku/AWS/react/covid/src/about.js":"20"},{"size":500,"mtime":1631176990567,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1618983976869,"results":"23","hashOfConfig":"22"},{"size":310,"mtime":1631258427927,"results":"24","hashOfConfig":"22"},{"size":2725,"mtime":1631595375889,"results":"25","hashOfConfig":"22"},{"size":4596,"mtime":1631595392939,"results":"26","hashOfConfig":"22"},{"size":3222,"mtime":1631595428665,"results":"27","hashOfConfig":"22"},{"size":5036,"mtime":1631595414927,"results":"28","hashOfConfig":"22"},{"size":2946,"mtime":1631595446623,"results":"29","hashOfConfig":"22"},{"size":2927,"mtime":1631595458070,"results":"30","hashOfConfig":"22"},{"size":5629,"mtime":1631260884839,"results":"31","hashOfConfig":"22"},{"size":2756,"mtime":1631595404980,"results":"32","hashOfConfig":"22"},{"size":3060,"mtime":1631613366951,"results":"33","hashOfConfig":"22"},{"size":1041,"mtime":1631515091928,"results":"34","hashOfConfig":"22"},{"size":472,"mtime":1631519928924,"results":"35","hashOfConfig":"22"},{"size":620,"mtime":1631180543807,"results":"36","hashOfConfig":"22"},{"size":3595,"mtime":1631179172032,"results":"37","hashOfConfig":"22"},{"size":859,"mtime":1631012096762,"results":"38","hashOfConfig":"22"},{"size":620,"mtime":1631243896024,"results":"39","hashOfConfig":"22"},{"size":3539,"mtime":1632216783504,"results":"40","hashOfConfig":"22"},{"size":7815,"mtime":1632217947902,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1k54ktm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":5,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},"/Users/dailytohoku/AWS/react/covid/src/index.js",[],["96","97"],"/Users/dailytohoku/AWS/react/covid/src/reportWebVitals.js",[],"/Users/dailytohoku/AWS/react/covid/src/App.js",[],"/Users/dailytohoku/AWS/react/covid/src/covid-news.js",["98","99","100"],"import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport exportFunc from './lib.js';\n\n{/*\nconst URL = 'https://www.daily-tohoku.news/wp-json/wp/v2/categories?slug=main';\nexport const ApiGet_Simple = (URL) => {\n  axios // axiosモジュールを使う\n    .get(URL) // getメソッドを呼び出す\n    .then((results) => { // レスポンスが来たらthenを実行\n      console.log(results.data); // コンソールログにresultsに含まれるdataを表示\n    })\n    .catch((error) => { // 通信エラーが発生したら\n      console.log('通信失敗'); // ログに失敗と表示\n      console.log(error.status); // エラーコードを表示\n    });\n    return \"null\";\n};\n*/}\n\nfunction CovidNewsList() {\n  const promise = axios.get('https://www.daily-tohoku.news/wp-json/wp/v2/categories?slug=main');\n  const targetID = promise.then((response) => response.data[0].id);\n  const targetCount = promise.then((response) => response.data[0].count);\n  console.log(targetID);\n  console.log(targetCount);\n\n  const [data, setData] = useState([]);\n  useEffect(async () => {\n    const result = await axios(\n      'https://www.daily-tohoku.news/wp-json/wp/v2/posts?categories=30&per_page=100&page=1',\n    );\n    setData(result.data);\n  }, []);\n  return (\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle-right\">\n        新型コロナ関連ニュース\n      </div>\n      <div className=\"contBody of-y-scrl px-3\">\n        <div className=\"mh-250px px-3\">\n          <ul className=\"ls-none p-0\">\n          {\n            data.map(item => (\n              <li className=\"my-1 line150\">\n                <div className=\"d-flex news-divider text-wrap\">\n                  <div className=\"mr-2 fs85 text-secondary\">{exportFunc.FormatDate(new Date(item.date), 'yyyy/MM/dd')}</div>\n                  <div><a className=\"covidLink fs90\" href={item.link}>{item.title.rendered.replace(/<span class=\"d-inlne bg-dark rounded px-2 py-1 text-white m-1 fs90\">Free<\\/span>/, '')}</a></div>\n                </div>\n              </li>\n            ))\n          }\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default CovidNewsList;\n\n{/*\nclass CovidNewsList extends React.Component {\n  state = {\n    posts: []\n  };\n  componentDidMount() {\n    axios.get(\"https://www.daily-tohoku.news/wp-json/wp/v2/posts?categories=30&per_page=100&page=1\")\n    .then(response => {\n      const posts = response.data;\n      this.setState({ posts });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.state.posts.map(post => (\n            <li>{post.title.rendered}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default CovidNewsList;\n*/}\n","/Users/dailytohoku/AWS/react/covid/src/covid-carrier-number.js",["101","102"],"import React from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport exportFunc from './lib.js';\n\nconst tagetFile = './data/04.csv';\n/*\nvar getCsvData = (dataPath) => {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", dataPath, false);\n\trequest.send(null);\n  let myLastMod = exportFunc.FormatDate(new Date(request.getResponseHeader(\"last-modified\")), 'yyyy/MM/dd');\n  return [request.responseText,myLastMod];\n};\n*/\n\n/*\n[\"2020年4月7日\", \"18\", \"1\", \"17\"]\n0（検査日時）: \"2020年4月7日\"\n1（実施数）: \"18\"\n2（陽性者数）: \"1\"\n3（陰性者数）: \"17\"\n*/\n\n/*\nvar CsvToJson = (csvStr, userOptions) => {\n  if (typeof csvStr !== 'string') {\n    return null\n  };\n  var options = { header : 0, columnName : [], ignoreBlankLine : true };\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n  var rows = csvStr.split('\\n');\n  var json = [], line = [], row = '', data = {};\n  var i, len, j, len2;\n  for (i = 0, len = rows.length; i < len; i++) {\n    if ((i + 1) <= options.header) continue;\n    if (options.ignoreBlankLine && rows[i] === '') continue;\n    line = rows[i].split(',');\n    if (options.columnName.length > 0) {\n      if(!line[0]) {\n        row = null;\n        continue;\n      }else {\n        if(!line[2]) {\n          row = null;\n          continue;\n        }\n      }\n      data = {};\n      for (j = 0, len2 = options.columnName.length; j < len2; j++) {\n        if (typeof line[j] !== 'undefined') {\n          row = line[j];\n          row = row.replace(/^\"(.+)?\"$/, '$1');\n          row = row.replace(/\\r/, '');\n          row = row.replace(/\\n/, '');\n        } else {\n          row = null;\n        }\n        data[options.columnName[j]] = row;\n      }\n      json.unshift(data);\n    } else {\n      json.unshift(line);\n    }\n  }\n  return json;\n};\n*/\nvar jsonObj = exportFunc.CsvToJson(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['検査日時', '実施数', '陽性者数', '陰性者数'] });\nvar caption = exportFunc.CsvToCaption(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['検査日時', '実施数', '陽性者数', '陰性者数'] });\nvar lastMod = '最終更新：' + exportFunc.FormatDate( exportFunc.GetCsvData(tagetFile)[1], 'yyyy/MM/dd HH:mm' );\nvar value = jsonObj[(jsonObj.length-1)]['陽性者数'] -  jsonObj[(jsonObj.length-2)]['陽性者数'];\nif ( value >0 ) { value = '+' + value; }\nvar t = 0;\nvar total = 0;\nfor (t=0; t<jsonObj.length; t++) {\n  total = total + parseInt(jsonObj[t]['陽性者数']);\n}\n\nconst CovidCarrierNumber = (props) => {\n  return(\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle-right\">\n        陽性判明数\n      </div>\n      <div className=\"todayPatient px-4\">\n        <div className=\"fs200 font-weight-bold\">{jsonObj[(jsonObj.length-1)]['陽性者数']}人</div>\n        <div className=\"my-1\">\n          <div className=\"fs85 text-secondary text-right\">前日比：{value}人</div>\n          <div className=\"fs85 text-secondary text-right\">累計：{total}人</div>\n        </div>\n      </div>\n      <div className=\"contBody\">\n        <div className=\"of-y-scrl px-3\">\n          <div className=\"chartWrapper\">\n            <BarChart\n              className=\"graphLTR\"\n              width={jsonObj.length * 10}\n              height={320}\n              data={jsonObj}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"検査日時\" />\n              <YAxis orientation=\"right\" />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"陽性者数\" stackId=\"a\" fill=\"#26A69A\" />\n            </BarChart>\n          </div>\n          <div className=\"graphCaption mb-3\">\n            （注）健康福祉部報告後に判明した陽性件数は翌日公表となるため、判明日と公表日で件数に差異が生じる場合があります。\n          </div>\n        </div>\n        <div className=\"graphCaption text-right mt-3 px-3\">\n          <a href=\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\" className=\"covidLink\" target=\"_blank\">出典元：青い森オープンデータカタログ </a>\n          <div className=\"mt-1\">\n            {lastMod}\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default CovidCarrierNumber;\n","/Users/dailytohoku/AWS/react/covid/src/covid-patient-data.js",["103","104","105","106"],"import React from 'react';\nimport exportFunc from './lib.js';\n\nconst tagetFile = './data/02.csv';\n\nvar jsonObj = exportFunc.CsvToJson(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['ＮＯ', '全国地方公共団体コード', '都道府県名', '保健所管内' ,'公表_年月日', '判明_年月日', '居住地', '年代', '性別'] });\nvar caption = exportFunc.CsvToCaption(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['ＮＯ', '全国地方公共団体コード', '都道府県名', '保健所管内' ,'公表_年月日', '判明_年月日', '居住地', '年代', '性別'] });\nvar lastMod = '最終更新：' + exportFunc.FormatDate( exportFunc.GetCsvData(tagetFile)[1], 'yyyy/MM/dd HH:mm' );\n\n{/* 降順 */}\nfunction compareDown(a, b) {\n  return parseInt(b['ＮＯ']) - parseInt(a['ＮＯ']);\n}\n{/* 昇順 */}\nfunction compareUp(a, b) {\n  return parseInt(a['ＮＯ']) - parseInt(b['ＮＯ']);\n}\njsonObj.sort(compareDown);\n\nconst CovidPatientData = (props) => {\n  return(\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle-right\">\n        感染症患者データ\n      </div>\n      <div className=\"contBody\">\n        <div className=\"of-y-scrl px-3\">\n          <div className=\"mh-350px py-3\">\n            <div className=\"table-responsive\">\n              <table id=\"patient-table\" className=\"table table-striped text-left fs75\">\n                <thead>\n                  <tr>\n                    <th className=\"border-right-def tablesorter-header tablesorter-headerUnSorted\">公表日</th>\n                    <th className=\"border-right-def tablesorter-header tablesorter-headerUnSorted\">居住地</th>\n                    <th className=\"border-right-def tablesorter-header tablesorter-headerUnSorted\">年代</th>\n                    <th className=\"tablesorter-header tablesorter-headerUnSorted\">性別</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  jsonObj.map(item => (\n                    <tr>\n                      <td className=\"px-1 border-right-def\" key={(\"date-\")+item['ＮＯ']}>{item['公表_年月日']}</td>\n                      <td className=\"px-1 border-right-def\" key={(\"area-\")+item['ＮＯ']}>{item['居住地']}</td>\n                      <td className=\"px-1 border-right-def\" key={(\"age-\")+item['ＮＯ']}>{item['年代']}</td>\n                      <td className=\"px-1\" key={(\"gender-\")+item['ＮＯ']}>{item['性別']}</td>\n                    </tr>\n                  ))\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <div className=\"graphCaption mb-3 px-3\">\n          {\n            caption.map(item => (\n              <div className=\"my-1\">{item}</div>\n            ))\n          }\n        </div>\n        <div className=\"graphCaption text-right mt-3 px-3\">\n          <a href=\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\" className=\"covidLink\" target=\"_blank\">出典元：青い森オープンデータカタログ </a>\n          <div className=\"mt-1\">\n            {lastMod}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CovidPatientData;\n","/Users/dailytohoku/AWS/react/covid/src/covid-carrier-status.js",["107"],"import React from 'react';\nimport './App.css';\nimport exportFunc from './lib.js';\n\nconst tagetFile = './data/03.csv';\n\nvar jsonObj = exportFunc.CsvToJson(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['blank', '入院中', '（うち重症）', '入院調整中', '宿泊療養中', '自宅療養中', '退院・療養解除', '死亡', '総計'] });\nvar caption = exportFunc.CsvToCaption(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['blank', '入院中', '（うち重症）', '入院調整中', '宿泊療養中', '自宅療養中', '退院・療養解除', '死亡', '総計'] });\nvar lastMod = '最終更新：' + exportFunc.FormatDate( exportFunc.GetCsvData(tagetFile)[1], 'yyyy/MM/dd HH:mm' );\n\nconst CovidCarrierStatus = (props) => {\n  return(\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle-right\">\n        検査陽性者の状況\n      </div>\n      <div className=\"contBody\">\n        <div className=\"of-y-scrl px-3\">\n          <div className=\"py-3\">\n            {\n              jsonObj.map(item => (          \n                <ul className=\"covid-graph\">\n                  <li>\n                    <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"p-2 text-nowrap\">陽性者数（累計）</div><div className=\"p-2 text-nowrap\"><span> {item['総計']}</span> 人</div></div> \n                    <ul className=\"pl-4\">\n                      <li>\n                        <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">入院中</div><div className=\"px-2 py-1 text-nowrap\"><span> {item['入院中']}</span> 人</div></div> \n                        <ul className=\"pl-4\">\n                          <li>\n                            <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">重症</div><div className=\"px-2 py-1 text-nowrap\"><span> {item['（うち重症）']}</span> 人</div></div> \n                          </li>\n                          <li>\n                            <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">重症以外</div><div className=\"px-2 py-1 text-nowrap\"><span> {parseInt(item['入院中'],10) - parseInt(item['（うち重症）'],10)}</span> 人</div></div> \n                          </li>\n                        </ul>\n                      </li>\n                      <li>\n                        <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">療養中</div><div className=\"px-2 py-1 text-nowrap\"><span> {parseInt(item['宿泊療養中'],10) + parseInt(item['自宅療養中'],10)}</span> 人</div></div> \n                        <ul className=\"pl-4\">\n                          <li>\n                            <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">宿泊療養中</div><div className=\"px-2 py-1 text-nowrap\"><span> {item['宿泊療養中']} </span> 人</div></div> \n                          </li>\n                          <li>\n                            <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">自宅療養中</div><div className=\"px-2 py-1 text-nowrap\"><span> {item['自宅療養中']} </span> 人</div></div> \n                          </li>\n                        </ul>\n                      </li>\n                      <li>\n                        <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">入院調整中</div><div className=\"px-2 py-1 text-nowrap\"><span> {item['入院調整中']} </span> 人</div></div> \n                      </li>\n                      <li>\n                        <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">退院・療養解除</div><div className=\"px-2 py-1 text-nowrap\"><span> {item['退院・療養解除']} </span> 人</div></div> \n                      </li>\n                      <li>\n                        <div className=\"d-flex justify-content-between px-2 py-1\"><div className=\"px-2 py-1 text-nowrap\">死亡</div><div className=\"px-2 py-1 text-nowrap\"><span> {item['死亡']} </span> 人</div></div> \n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              ))\n            }\n          </div>\n        </div>\n        <div className=\"graphCaption mb-3 px-3\">\n          {\n            caption.map(item => (\n              <div className=\"my-1\">{item}</div>\n            ))\n          }\n        </div>\n        <div className=\"graphCaption text-right mt-3 px-3\">\n          <a href=\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\" className=\"covidLink\" target=\"_blank\">出典元：青い森オープンデータカタログ </a>\n          <div className=\"mt-1\">\n            {lastMod}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CovidCarrierStatus;\n","/Users/dailytohoku/AWS/react/covid/src/covid-advice-center.js",["108"],"import React from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport exportFunc from './lib.js';\n\nconst tagetFile = './data/05.csv';\n\nvar jsonObj = exportFunc.CsvToJson(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : [ '全国地方公共団体コード', '都道府県名', '受付_年月日', '相談件数'] });\nvar caption = exportFunc.CsvToCaption(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : [ '全国地方公共団体コード', '都道府県名', '受付_年月日', '相談件数'] });\nvar lastMod = '最終更新：' + exportFunc.FormatDate( exportFunc.GetCsvData(tagetFile)[1], 'yyyy/MM/dd HH:mm' );\nvar value = jsonObj[(jsonObj.length-1)]['相談件数'] -  jsonObj[(jsonObj.length-2)]['相談件数'];\nif ( value >0 ) { value = '+' + value; }\nvar total = 0;\nvar t = 0;\nfor (t=0; t<jsonObj.length; t++) {\n  total = total + parseInt(jsonObj[t]['相談件数']);\n}\n\nconst CovidAdviceCenter = (props) => {\n  return(\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle-right\">\n        相談センター相談件数\n      </div>\n      <div className=\"todayPatient px-4\">\n        <div className=\"fs200 font-weight-bold\">{jsonObj[(jsonObj.length-1)]['相談件数']}人</div>\n        <div className=\"my-1\">\n          <div className=\"fs85 text-secondary text-right\">前日比：{value}件</div>\n          <div className=\"fs85 text-secondary text-right\">累計：{total}件</div>\n        </div>\n      </div>\n      <div className=\"contBody\">\n        <div className=\"of-y-scrl px-3\">\n          <div className=\"chartWrapper\">\n            <BarChart\n              className=\"graphLTR\"\n              width={jsonObj.length * 8}\n              height={320}\n              data={jsonObj}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"受付_年月日\" /> \n              <YAxis orientation=\"right\" />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"相談件数\" stackId=\"a\" fill=\"#26A69A\" />\n            </BarChart>\n            <div className=\"graphCaption mb-3\">\n              {caption}\n            </div>\n          </div>\n        </div>\n        <div className=\"graphCaption mb-3 px-3\">\n          {\n            caption.map(item => (\n              <div className=\"my-1\">{item}</div>\n            ))\n          }\n        </div>\n        <div className=\"graphCaption text-right mt-3 px-3\">\n          <a href=\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\" className=\"covidLink\" target=\"_blank\">出典元：青い森オープンデータカタログ </a>\n          <div className=\"mt-1\">\n            {lastMod}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CovidAdviceCenter;","/Users/dailytohoku/AWS/react/covid/src/covid-call-center.js",["109"],"import React from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport exportFunc from './lib.js';\n\nconst tagetFile = './data/06.csv';\n\nvar jsonObj = exportFunc.CsvToJson(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['全国地方公共団体コード', '都道府県名', '市区町村名', '受付_年月日', '相談件数(対応)'] });\nvar caption = exportFunc.CsvToCaption(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : [ '全国地方公共団体コード', '都道府県名', '受付_年月日', '相談件数(対応)'] });\nvar lastMod = '最終更新：' + exportFunc.FormatDate( exportFunc.GetCsvData(tagetFile)[1], 'yyyy/MM/dd HH:mm' );\nvar value = jsonObj[(jsonObj.length-1)]['相談件数(対応)'] -  jsonObj[(jsonObj.length-2)]['相談件数(対応)'];\nif ( value >0 ) { value = '+' + value; }\nvar total = 0;\nvar t = 0;\nfor (t=0; t<jsonObj.length; t++) {\n  total = total + parseInt(jsonObj[t]['相談件数(対応)']);\n}\n\nconst CovidCallCenter = (props) => {\n  return(\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle-right\">\n        コールセンター相談件数\n      </div>\n      <div className=\"todayPatient px-4\">\n        <div className=\"fs200 font-weight-bold\">{jsonObj[(jsonObj.length-1)]['相談件数(対応)']}人</div>\n        <div className=\"my-1\">\n          <div className=\"fs85 text-secondary text-right\">前日比：{value}件</div>\n          <div className=\"fs85 text-secondary text-right\">累計：{total}件</div>\n        </div>\n      </div>\n      <div className=\"contBody\">\n        <div className=\"of-y-scrl px-3\">\n          <div className=\"chartWrapper\">\n            <BarChart\n              className=\"graphLTR\"\n              width={jsonObj.length * 8}\n              height={320}\n              data={jsonObj}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"受付_年月日\" />\n              <YAxis orientation=\"right\" />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"相談件数(対応)\" stackId=\"a\" fill=\"#26A69A\" />\n            </BarChart>\n          </div>\n        </div>\n        <div className=\"graphCaption mb-3 px-3\">\n          {\n            caption.map(item => (\n              <div className=\"my-1\">{item}</div>\n            ))\n          }\n        </div>\n        <div className=\"graphCaption text-right mt-3 px-3\">\n          <a href=\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\" className=\"covidLink\" target=\"_blank\">出典元：青い森オープンデータカタログ </a>\n          <div className=\"mt-1\">\n            {lastMod}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CovidCallCenter;","/Users/dailytohoku/AWS/react/covid/src/lib.js",["110","111","112"],"/*\n**************************************************\nGetCsvData (datePath)\n--------------------------------------------------\ndatePath: ターゲットファイル\n--------------------------------------------------\ncsvから取得した文字列データと最終更新日を取得\n--------------------------------------------------\n2021.09.02　作成　by shingo nita\n**************************************************\n*/\nexports.GetCsvData = (dataPath) => {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", dataPath, false);\n\trequest.send(null);\n  let myLastMod = new Date(request.getResponseHeader(\"last-modified\"));\n  return [request.responseText,myLastMod];\n};\n\n\n\n/*\n**************************************************\nCsvToJson (csvStr, userOptions)\n--------------------------------------------------\ncsvStr: csvデータから取得した文字列\nuserOptions: header情報\n--------------------------------------------------\ncsvから取得したデータをもとにjsonデータを作成\n--------------------------------------------------\n2021.09.02　作成　by shingo nita\n**************************************************\n*/\nexports.CsvToJson = (csvStr, userOptions) => {\n  if (typeof csvStr !== 'string') {\n    return null\n  };\n  var options = { header : 0, columnName : [], ignoreBlankLine : true };\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n  var rows = csvStr.split('\\n');\n  var json = [], line = [], row = '', data = {};\n  var i, len, j, len2, x;\n  for (i = 0, len = rows.length; i < len; i++) {\n    if( rows[i].indexOf(',,,') != -1 ) {\n      continue;\n    }\n    if ((i + 1) <= options.header) continue;\n    if (options.ignoreBlankLine && rows[i] === '') continue;\n    line = rows[i].split(',');\n    if (options.columnName.length > 0) {\n\n      /* 行を「,」で分解した要素が空だったらnullを入れる（要素が空だと動作しない？） */\n      /* 2021.09.06 ADD By Shingo Nita  */\n      /*\n      for (x=0; x<line.length; x++) {\n        if(!line[x]) {\n          row = null;\n          continue;\n        }       \n      }\n      */\n      /*\n      if(!line[0]) {\n        row = null;\n        continue;\n      }else {\n        if(!line[2]) {\n          row = null;\n          continue;\n        }\n      }\n      */\n      data = {};\n      for (j = 0, len2 = options.columnName.length; j < len2; j++) {\n        if (typeof line[j] !== 'undefined') {\n          if ( line[j] ){\n            row = line[j];\n            row = row.replace(/^\"(.+)?\"$/, '$1');\n            row = row.replace(/\\r/, '');\n            row = row.replace(/\\n/, '');\n          } else {\n            row = 0;\n          }\n        } else {\n          row = null;\n        }\n        data[options.columnName[j]] = row;\n      }\n      json.unshift(data);\n    } else {\n      json.unshift(line);\n    }\n  }\n  return json;\n};\n\n\n\n/*\n**************************************************\nCsvToCaption (csvStr, userOptions)\n--------------------------------------------------\ncsvStr: csvデータから取得した文字列\nuserOptions: header情報\n--------------------------------------------------\ncsvから取得したデータをもとにjsonデータを作成\n--------------------------------------------------\n2021.09.02　作成　by shingo nita\n**************************************************\n*/\nexports.CsvToCaption = (csvStr, userOptions) => {\n  if (typeof csvStr !== 'string') {\n    return null\n  };\n  var options = { header : 0, columnName : [], ignoreBlankLine : true };\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n  var rows = csvStr.split('\\n');\n  var line = [];\n  var caption = [];\n  var i, len;\n  for (i = 0, len = rows.length; i < len; i++) {\n    if( rows[i].indexOf(',,,') != -1 ) {\n      line = rows[i].split(',');\n      if ( line.length < 9 ) {\n        if( line[0] ) {\n          caption.unshift(line[0]);\n        }\n      }\n    } else {\n      continue;\n    }\n  }\n  return caption;\n};\n\n\n\n/*\n**************************************************\nFormatDate (date, format)\n--------------------------------------------------\ndate: 日付オブジェクト\nformat: 書式フォーマット\n--------------------------------------------------\njsonから取得したdateをフォーマットを指定して変換する。\n--------------------------------------------------\n2021.09.01　作成　by shingo nita\n**************************************************\n*/\nexports.FormatDate = (date, format) => {\n  format = format.replace(/yyyy/g, date.getFullYear());\n  format = format.replace(/MM/g, ('0' + (date.getMonth() + 1)).slice(-2));\n  format = format.replace(/dd/g, ('0' + date.getDate()).slice(-2));\n  format = format.replace(/HH/g, ('0' + date.getHours()).slice(-2));\n  format = format.replace(/mm/g, ('0' + date.getMinutes()).slice(-2));\n  format = format.replace(/ss/g, ('0' + date.getSeconds()).slice(-2));\n  format = format.replace(/SSS/g, ('00' + date.getMilliseconds()).slice(-3));\n  return format;\n}\n\n// 例：2017年1月2日3時4分5秒6ミリ秒\n/*\nvar date = new Date(2017, 0, 2, 3, 4, 5, 6);\n\nconsole.log(FormatDate(date, 'yyyyMMdd')); // \"20170102\"\nconsole.log(FormatDate(date, 'yyyyMMddHHmmssSSS')); // \"20170102030405006\"\nconsole.log(FormatDate(date, 'yyyy/MM/dd')); // \"2017/01/02\"\nconsole.log(FormatDate(date, 'yyyy-MM-dd')); // \"2017-01-02\"\nconsole.log(FormatDate(date, 'HH:mm')); // \"03:04\"\nconsole.log(FormatDate(date, 'HH:mm:ss:SSS')); // \"03:04:05:006\"\n*/\n","/Users/dailytohoku/AWS/react/covid/src/covid-tested-number.js",["113"],"import React from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport exportFunc from './lib.js';\n\nconst tagetFile = './data/04.csv';\n\nvar jsonObj = exportFunc.CsvToJson(exportFunc.GetCsvData(tagetFile)[0], { header : 2, columnName : ['検査日時', '実施数', '陽性者数', '陰性者数'] });\nvar caption = exportFunc.CsvToCaption(exportFunc.GetCsvData(tagetFile)[0], { header : 2, columnName : ['検査日時', '実施数', '陽性者数', '陰性者数'] });\nvar lastMod = '最終更新：' + exportFunc.FormatDate( exportFunc.GetCsvData(tagetFile)[1], 'yyyy/MM/dd' );\nvar value = jsonObj[(jsonObj.length-1)]['実施数'] -  jsonObj[(jsonObj.length-2)]['実施数'];\nvar total = 0;\nvar t = 0;\nfor (t=0; t<jsonObj.length; t++) {\n  total = total + parseInt(jsonObj[t]['実施数']);\n}\n\nif ( value > 0 ) { value = '+' + value; }\n\nconst CovidTestedNumber = (props) => {\n  return(\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle-right\">\n        検査実施件数\n      </div>\n      <div className=\"todayPatient px-4\">\n        <div className=\"fs200 font-weight-bold\">{jsonObj[(jsonObj.length-1)]['実施数']}人</div>\n        <div className=\"my-1\">\n          <div className=\"fs85 text-secondary text-right\">前日比：{value}人</div>\n          <div className=\"fs85 text-secondary text-right\">累計：{total}人</div>\n        </div>\n      </div>\n      <div className=\"contBody\">\n        <div className=\"of-y-scrl px-3\">\n          <div className=\"chartWrapper\">\n            <BarChart\n              className=\"graphLTR\"\n              width={jsonObj.length * 8}\n              height={320}\n              data={jsonObj}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"検査日時\" />\n              <YAxis orientation=\"right\" />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"実施数\" stackId=\"a\" fill=\"#26A69A\" />\n            </BarChart>\n          </div>\n        </div>\n        <div className=\"graphCaption mb-3 px-3\">\n          {\n            caption.map(item => (\n              <div className=\"my-1\">{item}</div>\n            ))\n          }\n        </div>\n        <div className=\"graphCaption text-right mt-3 px-3\">\n          <a href=\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\" className=\"covidLink\" target=\"_blank\">出典元：青い森オープンデータカタログ </a>\n          <div className=\"mt-1\">\n            {lastMod}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CovidTestedNumber;\n","/Users/dailytohoku/AWS/react/covid/src/side-menu.js",["114","115","116","117","118","119","120","121"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport InfoIcon from '@material-ui/icons/Info';\nimport SmsOutlinedIcon from '@material-ui/icons/SmsOutlined';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport HelpOutlinedIcon from '@material-ui/icons/HelpOutlined';\nimport Footer from './footer';\n\nfunction SideMenu() {\n  return (\n    <div className=\"sidebar-cont my-3\">\n      <div className=\"text-center px-4 mb-4\">\n        <a href=\"/\">\n          <img src=\"./images/logo02-v.png\" className=\"covid-logo\" />\n        </a>\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item px-3 px-lg-0\">\n          <a className=\"covidLink fs80\" href=\"https://www.city.hachinohe.aomori.jp/corona/index.html\" target=\"_blank\">\n            <div className=\"d-flex\">\n              <InfoIcon className=\"str-icon\" />\n              <div className=\"text-left\">新型コロナウイルス感染症に関する情報（八戸市）</div>\n            </div>\n          </a>\n        </li>\n        <li className=\"list-group-item px-3 px-lg-0\">\n          <a className=\"covidLink fs85\" href=\"https://www.pref.aomori.lg.jp/koho/coronavirus_index.html\" target=\"_blank\">\n            <div className=\"d-flex\">\n              <InfoIcon className=\"str-icon\" />\n              <div className=\"text-left\">新型コロナウイルス感染症に関する情報（青森県庁）</div>\n            </div>\n          </a>\n        </li>\n        <li className=\"list-group-item px-3 px-lg-0\">\n          <a className=\"covidLink fs85\" href=\"https://www.pref.iwate.jp/kurashikankyou/iryou/covid19/index.html\" target=\"_blank\">\n            <div className=\"d-flex\">\n              <InfoIcon className=\"str-icon\" />\n              <div className=\"text-left\">新型コロナウイルス感染症に関する情報（岩手県庁）</div>\n            </div>\n          </a>\n        </li>\n        <li className=\"list-group-item px-3 px-lg-0\">\n          <a className=\"covidLink fs85\" href=\"https://www.pref.aomori.lg.jp/koho/message.html\" target=\"_blank\">\n            <div className=\"d-flex\">\n              <SmsOutlinedIcon className=\"str-icon\" />\n              <div className=\"text-left\">青森県知事からのメッセージ</div>\n            </div>\n          </a>\n        </li>\n        <li className=\"list-group-item px-3 px-lg-0\">\n          <a className=\"covidLink fs85\" href=\"https://www.daily-tohoku.news/\" target=\"_blank\">\n            <div className=\"d-flex\">\n              <LanguageIcon className=\"str-icon\" />\n              <div className=\"text-left\">デーリー東北デジタル</div>\n            </div>\n          </a>\n        </li>\n        <li className=\"list-group-item px-3 px-lg-0\">\n          <a className=\"covidLink fs85\" href=\"/about\">\n            <div className=\"d-flex\">\n              <HelpOutlinedIcon className=\"str-icon\" />\n              <div className=\"text-left\">当サイトについて</div>\n            </div>\n          </a>\n        </li>\n      </ul>\n      <Footer />\n    </div>\n  );\n}\nexport default SideMenu;\n","/Users/dailytohoku/AWS/react/covid/src/drawer.js",["122"],"import React from \"react\";\nimport ReactModernDrawer from 'react-modern-drawer';\nimport 'react-modern-drawer/dist/index.css'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SideMenu from './side-menu';\n\n\nconst Drawer = () => {\n \n  const [isOpen, setIsOpen] = React.useState(false)\n  const toggleDrawer = () => {\n    setIsOpen((prevState) => !prevState)\n  }\n\n  return (\n    <div>\n      <div className=\"d-block d-lg-none\">\n        <div className=\"d-flex justify-content-between align-items-center text-nowrap mt-3\">\n          <div className=\"d-block d-lg-none\">\n            <MenuIcon className=\"menu-icon\" onClick={toggleDrawer} />\n          </div>\n          <div className=\"d-block d-lg-none\">\n            <a href=\"/\">\n              <img src=\"./images/logo02-h.png\" className=\"covid-logo-sp\" />\n            </a>\n          </div>\n\n        </div>\n        <ReactModernDrawer open={isOpen} onClose={toggleDrawer} direction='right'>\n          <SideMenu />\n        </ReactModernDrawer>\n      </div>\n    </div>\n  );\n};\n \nexport default Drawer;","/Users/dailytohoku/AWS/react/covid/src/footer.js",[],"/Users/dailytohoku/AWS/react/covid/src/Menu.js",["123"],"import React, { Component } from 'react';\nimport {BrowserRouter as Router, Switch, Link, Route} from \"react-router-dom\";\nimport Home from \"./Home\";\n\nconst page404 = () => <div><h1>404</h1>存在しないページです</div>  //<= ヒットしなかった時用のページを追加\n\nexport default class Menu extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route exact component={page404} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n",["124","125"],"/Users/dailytohoku/AWS/react/covid/src/Home.js",["126","127"],"/Users/dailytohoku/AWS/react/covid/src/Drawer.js",[],"/Users/dailytohoku/AWS/react/covid/src/menu.js",["128"],"import React, { Component } from 'react';\nimport {BrowserRouter as Router, Switch, Link, Route} from \"react-router-dom\";\nimport Home from \"./home\";\nimport About from \"./about\";\n\nconst page404 = () => <div><h1>404</h1>存在しないページです</div>  //<= ヒットしなかった時用のページを追加\n\nexport default class Menu extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/about' exact component={About} />\n          <Route exact component={page404} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","/Users/dailytohoku/AWS/react/covid/src/home.js",["129","130"],"/Users/dailytohoku/AWS/react/covid/src/about.js",["131","132","133","134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":5,"column":1,"nodeType":"142","messageId":"143","endLine":19,"endColumn":4},{"ruleId":"144","severity":1,"message":"145","line":29,"column":13,"nodeType":"146","endLine":34,"endColumn":4},{"ruleId":"140","severity":1,"message":"141","line":61,"column":1,"nodeType":"142","messageId":"143","endLine":86,"endColumn":4},{"ruleId":"147","severity":1,"message":"148","line":72,"column":5,"nodeType":"149","messageId":"150","endLine":72,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":123,"column":11,"nodeType":"153","messageId":"154","endLine":123,"endColumn":112,"fix":"155"},{"ruleId":"140","severity":1,"message":"141","line":10,"column":1,"nodeType":"142","messageId":"143","endLine":10,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":14,"column":1,"nodeType":"142","messageId":"143","endLine":14,"endColumn":11},{"ruleId":"147","severity":1,"message":"156","line":15,"column":10,"nodeType":"149","messageId":"150","endLine":15,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":63,"column":11,"nodeType":"153","messageId":"154","endLine":63,"endColumn":112,"fix":"157"},{"ruleId":"151","severity":1,"message":"152","line":72,"column":11,"nodeType":"153","messageId":"154","endLine":72,"endColumn":112,"fix":"158"},{"ruleId":"151","severity":1,"message":"152","line":66,"column":11,"nodeType":"153","messageId":"154","endLine":66,"endColumn":112,"fix":"159"},{"ruleId":"151","severity":1,"message":"152","line":63,"column":11,"nodeType":"153","messageId":"154","endLine":63,"endColumn":112,"fix":"160"},{"ruleId":"147","severity":1,"message":"161","line":45,"column":24,"nodeType":"149","messageId":"150","endLine":45,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":47,"column":32,"nodeType":"164","messageId":"165","endLine":47,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":128,"column":32,"nodeType":"164","messageId":"165","endLine":128,"endColumn":34},{"ruleId":"151","severity":1,"message":"152","line":64,"column":11,"nodeType":"153","messageId":"154","endLine":64,"endColumn":112,"fix":"166"},{"ruleId":"147","severity":1,"message":"167","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"168","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":14,"column":11,"nodeType":"153","endLine":14,"endColumn":69},{"ruleId":"151","severity":1,"message":"152","line":19,"column":11,"nodeType":"153","messageId":"154","endLine":19,"endColumn":119,"fix":"171"},{"ruleId":"151","severity":1,"message":"152","line":27,"column":11,"nodeType":"153","messageId":"154","endLine":27,"endColumn":122,"fix":"172"},{"ruleId":"151","severity":1,"message":"152","line":35,"column":11,"nodeType":"153","messageId":"154","endLine":35,"endColumn":130,"fix":"173"},{"ruleId":"151","severity":1,"message":"152","line":43,"column":11,"nodeType":"153","messageId":"154","endLine":43,"endColumn":112,"fix":"174"},{"ruleId":"151","severity":1,"message":"152","line":51,"column":11,"nodeType":"153","messageId":"154","endLine":51,"endColumn":95,"fix":"175"},{"ruleId":"169","severity":1,"message":"170","line":24,"column":15,"nodeType":"153","endLine":24,"endColumn":76},{"ruleId":"147","severity":1,"message":"176","line":2,"column":42,"nodeType":"149","messageId":"150","endLine":2,"endColumn":46},{"ruleId":"136","replacedBy":"177"},{"ruleId":"138","replacedBy":"178"},{"ruleId":"147","severity":1,"message":"179","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"180","line":13,"column":9,"nodeType":"149","messageId":"150","endLine":13,"endColumn":14},{"ruleId":"147","severity":1,"message":"176","line":2,"column":42,"nodeType":"149","messageId":"150","endLine":2,"endColumn":46},{"ruleId":"147","severity":1,"message":"179","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"180","line":13,"column":9,"nodeType":"149","messageId":"150","endLine":13,"endColumn":14},{"ruleId":"147","severity":1,"message":"179","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"180","line":6,"column":9,"nodeType":"149","messageId":"150","endLine":6,"endColumn":14},{"ruleId":"151","severity":1,"message":"152","line":96,"column":25,"nodeType":"153","messageId":"154","endLine":96,"endColumn":137,"fix":"181"},{"ruleId":"151","severity":1,"message":"152","line":97,"column":25,"nodeType":"153","messageId":"154","endLine":97,"endColumn":116,"fix":"182"},{"ruleId":"151","severity":1,"message":"152","line":98,"column":25,"nodeType":"153","messageId":"154","endLine":98,"endColumn":132,"fix":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'caption' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"186","text":"187"},"'compareUp' is defined but never used.",{"range":"188","text":"187"},{"range":"189","text":"187"},{"range":"190","text":"187"},{"range":"191","text":"187"},"'x' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"192","text":"187"},"'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"193","text":"187"},{"range":"194","text":"187"},{"range":"195","text":"187"},{"range":"196","text":"187"},{"range":"197","text":"187"},"'Link' is defined but never used.",["184"],["185"],"'Component' is defined but never used.","'style' is assigned a value but never used.",{"range":"198","text":"187"},{"range":"199","text":"187"},{"range":"200","text":"187"},"no-global-assign","no-unsafe-negation",[4061,4061]," rel=\"noreferrer\"",[2738,2738],[4438,4438],[2532,2532],[2475,2475],[2401,2401],[791,791],[1171,1171],[1560,1560],[1931,1931],[2281,2281],[4326,4326],[4471,4471],[4629,4629]]