{"ast":null,"code":"import React from'react';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import exportFunc from'./lib.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var tagetFile='./data/04.csv';/*\nvar getCsvData = (dataPath) => {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", dataPath, false);\n\trequest.send(null);\n  let myLastMod = exportFunc.FormatDate(new Date(request.getResponseHeader(\"last-modified\")), 'yyyy/MM/dd');\n  return [request.responseText,myLastMod];\n};\n*/ /*\n[\"2020年4月7日\", \"18\", \"1\", \"17\"]\n0（検査日時）: \"2020年4月7日\"\n1（実施数）: \"18\"\n2（陽性者数）: \"1\"\n3（陰性者数）: \"17\"\n*/ /*\nvar CsvToJson = (csvStr, userOptions) => {\n  if (typeof csvStr !== 'string') {\n    return null\n  };\n  var options = { header : 0, columnName : [], ignoreBlankLine : true };\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n  var rows = csvStr.split('\\n');\n  var json = [], line = [], row = '', data = {};\n  var i, len, j, len2;\n  for (i = 0, len = rows.length; i < len; i++) {\n    if ((i + 1) <= options.header) continue;\n    if (options.ignoreBlankLine && rows[i] === '') continue;\n    line = rows[i].split(',');\n    if (options.columnName.length > 0) {\n      if(!line[0]) {\n        row = null;\n        continue;\n      }else {\n        if(!line[2]) {\n          row = null;\n          continue;\n        }\n      }\n      data = {};\n      for (j = 0, len2 = options.columnName.length; j < len2; j++) {\n        if (typeof line[j] !== 'undefined') {\n          row = line[j];\n          row = row.replace(/^\"(.+)?\"$/, '$1');\n          row = row.replace(/\\r/, '');\n          row = row.replace(/\\n/, '');\n        } else {\n          row = null;\n        }\n        data[options.columnName[j]] = row;\n      }\n      json.unshift(data);\n    } else {\n      json.unshift(line);\n    }\n  }\n  return json;\n};\n*/var jsonObj=exportFunc.CsvToJson(exportFunc.GetCsvData(tagetFile)[0],{header:1,columnName:['検査日時','実施数','陽性者数','陰性者数']});var caption=exportFunc.CsvToCaption(exportFunc.GetCsvData(tagetFile)[0],{header:1,columnName:['検査日時','実施数','陽性者数','陰性者数']});var lastMod='最終更新：'+exportFunc.FormatDate(exportFunc.GetCsvData(tagetFile)[1],'yyyy/MM/dd HH:mm');var value=jsonObj[jsonObj.length-1]['陽性者数']-jsonObj[jsonObj.length-2]['陽性者数'];if(value>0){value='+'+value;}var t=0;var total=0;for(t=0;t<jsonObj.length;t++){total=total+parseInt(jsonObj[t]['陽性者数']);}var CovidCarrierNumber=function CovidCarrierNumber(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"contWrapper w-100 py-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contTitle-right\",children:\"\\u967D\\u6027\\u5224\\u660E\\u6570\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"todayPatient px-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fs200 font-weight-bold\",children:[jsonObj[jsonObj.length-1]['陽性者数'],\"\\u4EBA\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fs85 text-secondary text-right\",children:[\"\\u524D\\u65E5\\u6BD4\\uFF1A\",value,\"\\u4EBA\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fs85 text-secondary text-right\",children:[\"\\u7D2F\\u8A08\\uFF1A\",total,\"\\u4EBA\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"contBody\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"of-y-scrl px-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chartWrapper\",children:/*#__PURE__*/_jsxs(BarChart,{className:\"graphLTR\",width:jsonObj.length*10,height:320,data:jsonObj,margin:{top:20,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"\\u691C\\u67FB\\u65E5\\u6642\"}),/*#__PURE__*/_jsx(YAxis,{orientation:\"right\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"\\u967D\\u6027\\u8005\\u6570\",stackId:\"a\",fill:\"#26A69A\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"graphCaption mb-3\",children:\"\\uFF08\\u6CE8\\uFF09\\u5065\\u5EB7\\u798F\\u7949\\u90E8\\u5831\\u544A\\u5F8C\\u306B\\u5224\\u660E\\u3057\\u305F\\u967D\\u6027\\u4EF6\\u6570\\u306F\\u7FCC\\u65E5\\u516C\\u8868\\u3068\\u306A\\u308B\\u305F\\u3081\\u3001\\u5224\\u660E\\u65E5\\u3068\\u516C\\u8868\\u65E5\\u3067\\u4EF6\\u6570\\u306B\\u5DEE\\u7570\\u304C\\u751F\\u3058\\u308B\\u5834\\u5408\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"graphCaption text-right mt-3 px-3\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\",className:\"covidLink\",target:\"_blank\",children:\"\\u51FA\\u5178\\u5143\\uFF1A\\u9752\\u3044\\u68EE\\u30AA\\u30FC\\u30D7\\u30F3\\u30C7\\u30FC\\u30BF\\u30AB\\u30BF\\u30ED\\u30B0 \"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:lastMod})]})]})]});};export default CovidCarrierNumber;","map":{"version":3,"sources":["/Users/dailytohoku/AWS/react/covid/src/covid-carrier-number.js"],"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","exportFunc","tagetFile","jsonObj","CsvToJson","GetCsvData","header","columnName","caption","CsvToCaption","lastMod","FormatDate","value","length","t","total","parseInt","CovidCarrierNumber","props","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport exportFunc from './lib.js';\n\nconst tagetFile = './data/04.csv';\n/*\nvar getCsvData = (dataPath) => {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", dataPath, false);\n\trequest.send(null);\n  let myLastMod = exportFunc.FormatDate(new Date(request.getResponseHeader(\"last-modified\")), 'yyyy/MM/dd');\n  return [request.responseText,myLastMod];\n};\n*/\n\n/*\n[\"2020年4月7日\", \"18\", \"1\", \"17\"]\n0（検査日時）: \"2020年4月7日\"\n1（実施数）: \"18\"\n2（陽性者数）: \"1\"\n3（陰性者数）: \"17\"\n*/\n\n/*\nvar CsvToJson = (csvStr, userOptions) => {\n  if (typeof csvStr !== 'string') {\n    return null\n  };\n  var options = { header : 0, columnName : [], ignoreBlankLine : true };\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n  var rows = csvStr.split('\\n');\n  var json = [], line = [], row = '', data = {};\n  var i, len, j, len2;\n  for (i = 0, len = rows.length; i < len; i++) {\n    if ((i + 1) <= options.header) continue;\n    if (options.ignoreBlankLine && rows[i] === '') continue;\n    line = rows[i].split(',');\n    if (options.columnName.length > 0) {\n      if(!line[0]) {\n        row = null;\n        continue;\n      }else {\n        if(!line[2]) {\n          row = null;\n          continue;\n        }\n      }\n      data = {};\n      for (j = 0, len2 = options.columnName.length; j < len2; j++) {\n        if (typeof line[j] !== 'undefined') {\n          row = line[j];\n          row = row.replace(/^\"(.+)?\"$/, '$1');\n          row = row.replace(/\\r/, '');\n          row = row.replace(/\\n/, '');\n        } else {\n          row = null;\n        }\n        data[options.columnName[j]] = row;\n      }\n      json.unshift(data);\n    } else {\n      json.unshift(line);\n    }\n  }\n  return json;\n};\n*/\nvar jsonObj = exportFunc.CsvToJson(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['検査日時', '実施数', '陽性者数', '陰性者数'] });\nvar caption = exportFunc.CsvToCaption(exportFunc.GetCsvData(tagetFile)[0], { header : 1, columnName : ['検査日時', '実施数', '陽性者数', '陰性者数'] });\nvar lastMod = '最終更新：' + exportFunc.FormatDate( exportFunc.GetCsvData(tagetFile)[1], 'yyyy/MM/dd HH:mm' );\nvar value = jsonObj[(jsonObj.length-1)]['陽性者数'] -  jsonObj[(jsonObj.length-2)]['陽性者数'];\nif ( value >0 ) { value = '+' + value; }\nvar t = 0;\nvar total = 0;\nfor (t=0; t<jsonObj.length; t++) {\n  total = total + parseInt(jsonObj[t]['陽性者数']);\n}\n\nconst CovidCarrierNumber = (props) => {\n  return(\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle-right\">\n        陽性判明数\n      </div>\n      <div className=\"todayPatient px-4\">\n        <div className=\"fs200 font-weight-bold\">{jsonObj[(jsonObj.length-1)]['陽性者数']}人</div>\n        <div className=\"my-1\">\n          <div className=\"fs85 text-secondary text-right\">前日比：{value}人</div>\n          <div className=\"fs85 text-secondary text-right\">累計：{total}人</div>\n        </div>\n      </div>\n      <div className=\"contBody\">\n        <div className=\"of-y-scrl px-3\">\n          <div className=\"chartWrapper\">\n            <BarChart\n              className=\"graphLTR\"\n              width={jsonObj.length * 10}\n              height={320}\n              data={jsonObj}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"検査日時\" />\n              <YAxis orientation=\"right\" />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"陽性者数\" stackId=\"a\" fill=\"#26A69A\" />\n            </BarChart>\n          </div>\n          <div className=\"graphCaption mb-3\">\n            （注）健康福祉部報告後に判明した陽性件数は翌日公表となるため、判明日と公表日で件数に差異が生じる場合があります。\n          </div>\n        </div>\n        <div className=\"graphCaption text-right mt-3 px-3\">\n          <a href=\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\" className=\"covidLink\" target=\"_blank\">出典元：青い森オープンデータカタログ </a>\n          <div className=\"mt-1\">\n            {lastMod}\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default CovidCarrierNumber;\n"]},"metadata":{},"sourceType":"module"}