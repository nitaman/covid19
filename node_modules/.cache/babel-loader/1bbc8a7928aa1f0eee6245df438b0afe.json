{"ast":null,"code":"var _jsxFileName = \"/Users/dailytohoku/AWS/react/covid/src/App.js\";\nimport React, { Component } from 'react';\nimport { BarChart, Bar } from 'recharts';\nimport { XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport './App.css';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'A',\n  uv: 4000\n}, {\n  name: 'B',\n  uv: 3000\n}, {\n  name: 'C',\n  uv: 2000\n}, {\n  name: 'D',\n  uv: 2780\n}, {\n  name: 'E',\n  uv: 1890\n}, {\n  name: 'F',\n  uv: 2390\n}, {\n  name: 'G',\n  uv: 3490\n}, {\n  name: 'H',\n  uv: 1490\n}, {\n  name: 'I',\n  uv: 2950\n}, {\n  name: 'J',\n  uv: 4690\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCSV = () => {\n      return new Promise(resolve => {\n        var buf;\n        const {\n          csvfile\n        } = this.state;\n        Papa.parse(csvfile, {\n          header: true,\n          delimiter: ',',\n          complete: buf => {\n            console.log(buf.data);\n          }\n        });\n      });\n    };\n\n    this.state = {\n      csvfile: './data/03.csv'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 730,\n      height: 350,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"uv\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"uv\",\n        fill: \"#784d88\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dailytohoku/AWS/react/covid/src/App.js"],"names":["React","Component","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Papa","data","name","uv","App","constructor","props","getCSV","Promise","resolve","buf","csvfile","state","parse","header","delimiter","complete","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,UAA9B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,aAAvB,EAAsCC,OAAtC,QAAqD,UAArD;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,IAAI,GAAG,CACX;AAACC,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CADW,EAEX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CAFW,EAGX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CAHW,EAIX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CAJW,EAKX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CALW,EAMX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CANW,EAOX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CAPW,EAQX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CARW,EASX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CATW,EAUX;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,EAAE,EAAE;AAAhB,CAVW,CAAb;;AAaA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAE1BY,EAAAA,WAAW,CAAEC,KAAF,EAAS;AACpB,UAAMA,KAAN;;AADoB,SAOpBC,MAPoB,GAOX,MAAK;AACd,aAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAG;AAC5B,YAAIC,GAAJ;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAc,KAAKC,KAAzB;AACAZ,QAAAA,IAAI,CAACa,KAAL,CAAWF,OAAX,EAAoB;AACnBG,UAAAA,MAAM,EAAE,IADW;AAEnBC,UAAAA,SAAS,EAAC,GAFS;AAGnBC,UAAAA,QAAQ,EAAEN,GAAD,IAAQ;AAChBO,YAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACT,IAAhB;AACA;AALkB,SAApB;AAOA,OAVM,CAAP;AAWC,KAnBmB;;AAEpB,SAAKW,KAAL,GAAa;AACZD,MAAAA,OAAO,EAAE;AADG,KAAb;AAGC;;AAgBDQ,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAmC,MAAA,IAAI,EAAElB,IAAzC;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,IAAb;AAAkB,QAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,IAAb;AAAkB,QAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAlCyB;;AAqC5B,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BarChart, Bar } from 'recharts';\nimport { XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts'\nimport './App.css';\n\nimport Papa from 'papaparse';\n\n\nconst data = [\n  {name: 'A', uv: 4000},\n  {name: 'B', uv: 3000},\n  {name: 'C', uv: 2000},\n  {name: 'D', uv: 2780},\n  {name: 'E', uv: 1890},\n  {name: 'F', uv: 2390},\n  {name: 'G', uv: 3490},\n  {name: 'H', uv: 1490},\n  {name: 'I', uv: 2950},\n  {name: 'J', uv: 4690},\n]\n\nclass App extends Component {\n\n  constructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcsvfile: './data/03.csv'\n\t\t};\n  }\n\t\t\n  getCSV = () =>{\n\t\treturn new Promise(resolve =>{\n\t\t\tvar buf;\n\t\t\tconst { csvfile } = this.state;\n\t\t\tPapa.parse(csvfile, {\n\t\t\t\theader: true,\n\t\t\t\tdelimiter:',',\n\t\t\t\tcomplete:(buf) =>{\n\t\t\t\t\tconsole.log(buf.data);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n  }\n\n  render() {\n    return (\n      <BarChart width={730} height={350} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n        <Bar dataKey=\"uv\" fill=\"#784d88\" />\n      </BarChart>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}