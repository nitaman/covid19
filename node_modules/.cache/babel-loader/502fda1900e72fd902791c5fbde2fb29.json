{"ast":null,"code":"var _jsxFileName = \"/Users/dailytohoku/AWS/react/covid/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'H',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'I',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'J',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nexport default class Example extends PureComponent {\n  render() {\n    function loadCSV(targetFile) {\n      // 読み込んだデータを1行ずつ格納する配列\n      var allData = []; // XMLHttpRequestの用意\n\n      var XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest;\n\n      var request = new XMLHttpRequest();\n      request.open(\"get\", targetFile, false);\n      request.send(null); // 読み込んだCSVデータ\n\n      var csvData = request.responseText; // CSVの全行を取得\n\n      var lines = csvData.split(\"\\n\");\n\n      for (var i = 0; i < lines.length; i++) {\n        // 1行ごとの処理\n        var wordSet = lines[i].split(\",\");\n        var wordData = {\n          name: wordSet[0],\n          age: wordSet[1]\n        };\n        allData.push(wordData);\n      }\n\n      console.log(allData);\n    }\n\n    console.log('Hello');\n    loadCSV(\"./data/03.csv\");\n    console.log('Hello');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"pv\",\n          stackId: \"a\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"uv\",\n          stackId: \"a\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/dailytohoku/AWS/react/covid/src/App.js"],"names":["React","PureComponent","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","data","name","uv","pv","amt","Example","render","loadCSV","targetFile","allData","XMLHttpRequest","require","request","open","send","csvData","responseText","lines","split","i","length","wordSet","wordData","age","push","console","log","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst data = [\n  {\n    name: 'A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'H',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'I',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'J',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n\n  render() {\n\n    function loadCSV(targetFile) {\n      // 読み込んだデータを1行ずつ格納する配列\n      var allData = [];\n      // XMLHttpRequestの用意\n      var XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest;\n      var request = new XMLHttpRequest();\n      request.open(\"get\", targetFile, false);\n      request.send(null);\n\n      // 読み込んだCSVデータ\n      var csvData = request.responseText;\n\n      // CSVの全行を取得\n      var lines = csvData.split(\"\\n\");\n\n      for (var i = 0; i < lines.length; i++) {\n        // 1行ごとの処理\n\n          var wordSet = lines[i].split(\",\");\n\n          var wordData = {\n              name: wordSet[0],\n              age: wordSet[1],\n          };\n\n        allData.push(wordData);\n      }\n\n      console.log(allData);\n    }\n\n    console.log('Hello')\n    loadCSV(\"./data/03.csv\");\n    console.log('Hello');     \n\n\n    return (\n      <div>\n        <BarChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\n          <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\n        </BarChart>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}