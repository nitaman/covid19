{"ast":null,"code":"var _jsxFileName = \"/Users/dailytohoku/AWS/react/covid/src/covid-inspection.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { readRemoteFile } from 'react-papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nreadRemoteFile('./data/04.csv', {\n  complete: results => {\n    console.log('Results:', results);\n    var jsonObj = csvToJson('[results,data]', {\n      header: 1,\n      columnName: ['id', 'name', 'age']\n    });\n    console.log(jsonObj);\n  }\n});\n\nvar csvToJson = function (csvStr, userOptions) {\n  if (typeof csvStr !== 'string') return null;\n  var options = {\n    header: 0,\n    columnName: [],\n    ignoreBlankLine: true\n  };\n\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n\n  var rows = csvStr.split('\\n');\n  var json = [],\n      line = [],\n      row = '',\n      data = {};\n  var i, len, j, len2;\n\n  for (i = 0, len = rows.length; i < len; i++) {\n    if (i + 1 <= options.header) continue;\n    if (options.ignoreBlankLine && rows[i] === '') continue;\n    line = rows[i].split(',');\n\n    if (options.columnName.length > 0) {\n      data = {};\n\n      for (j = 0, len2 = options.columnName.length; j < len2; j++) {\n        if (typeof line[j] !== 'undefined') {\n          row = line[j];\n          row = row.replace(/^\"(.+)?\"$/, '$1');\n        } else {\n          row = null;\n        }\n\n        data[options.columnName[j]] = row;\n      }\n\n      json.push(data);\n    } else {\n      json.push(line);\n    }\n  }\n\n  return json;\n};\n\nconst data = [{\n  name: 'A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'H',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'I',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'J',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nconst CovidInspection = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentBox\",\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 500,\n      height: 300,\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"pv\",\n        stackId: \"a\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"uv\",\n        stackId: \"a\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CovidInspection;\nexport default CovidInspection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidInspection\");","map":{"version":3,"sources":["/Users/dailytohoku/AWS/react/covid/src/covid-inspection.js"],"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","readRemoteFile","complete","results","console","log","jsonObj","csvToJson","header","columnName","csvStr","userOptions","options","ignoreBlankLine","rows","split","json","line","row","data","i","len","j","len2","length","replace","push","name","uv","pv","amt","CovidInspection","props","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { readRemoteFile } from 'react-papaparse';\n\nreadRemoteFile(\n  './data/04.csv',\n  {\n    complete: (results) => {\n      console.log('Results:', results);\n      var jsonObj = csvToJson('[results,data]', { header : 1, columnName : ['id', 'name', 'age'] });\n      console.log(jsonObj);\n    }\n  }\n);\n\nvar csvToJson = function(csvStr, userOptions) {\n  if (typeof csvStr !== 'string') return null;\n  var options = { header : 0, columnName : [], ignoreBlankLine : true };\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n  var rows = csvStr.split('\\n');\n  var json = [], line = [], row = '', data = {};\n  var i, len, j, len2;\n  for (i = 0, len = rows.length; i < len; i++) {\n    if ((i + 1) <= options.header) continue;\n    if (options.ignoreBlankLine && rows[i] === '') continue;\n    line = rows[i].split(',');\n    if (options.columnName.length > 0) {\n      data = {};\n      for (j = 0, len2 = options.columnName.length; j < len2; j++) {\n        if (typeof line[j] !== 'undefined') {\n          row = line[j];\n          row = row.replace(/^\"(.+)?\"$/, '$1');\n        } else {\n          row = null;\n        }\n        data[options.columnName[j]] = row;\n      }\n      json.push(data);\n    } else {\n      json.push(line);\n    }\n  }\n  return json;\n};\n\n\nconst data = [\n  {\n    name: 'A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'H',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'I',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'J',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\n\nconst CovidInspection = (props) => {\n  return(\n    <div className=\"commentBox\">\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\n        <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\n      </BarChart>\n    </div>\n  );\n};\n\nexport default CovidInspection;"]},"metadata":{},"sourceType":"module"}