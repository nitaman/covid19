{"ast":null,"code":"var _jsxFileName = \"/Users/dailytohoku/AWS/react/covid/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'H',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'I',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}, {\n  name: 'J',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nexport default class Example extends PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 500,\n      height: 300,\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"pv\",\n        stackId: \"a\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"uv\",\n        stackId: \"a\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/dailytohoku/AWS/react/covid/src/App.js"],"names":["React","PureComponent","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","data","name","uv","pv","amt","Example","render","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst data = [\n  {\n    name: 'A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'H',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'I',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: 'J',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n\n  render() {\n    return (\n        <BarChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\n          <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\n        </BarChart>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}