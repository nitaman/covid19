{"ast":null,"code":"var _jsxFileName = \"/Users/dailytohoku/AWS/react/covid/src/covid-carrier-number.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('./lib.js');\n\nconst tagetFile = './data/04.csv';\n\nvar getCsvData = dataPath => {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", dataPath, false);\n  request.send(null);\n  let lastMod = new Date(request.getResponseHeader(\"last-modified\"));\n  return request.responseText;\n};\n\nvar csvToJson = (csvStr, userOptions) => {\n  if (typeof csvStr !== 'string') {\n    return null;\n  }\n\n  ;\n  var options = {\n    header: 0,\n    columnName: [],\n    ignoreBlankLine: true\n  };\n\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n\n  var rows = csvStr.split('\\n');\n  var json = [],\n      line = [],\n      row = '',\n      data = {};\n  var i, len, j, len2;\n\n  for (i = 0, len = rows.length; i < len; i++) {\n    if (i + 1 <= options.header) continue;\n    if (options.ignoreBlankLine && rows[i] === '') continue;\n    line = rows[i].split(',');\n    /*\n    [\"2020年4月7日\", \"18\", \"1\", \"17\"]\n    0（検査日時）: \"2020年4月7日\"\n    1（実施数）: \"18\"\n    2（陽性者数）: \"1\"\n    3（陰性者数）: \"17\"\n    */\n\n    if (options.columnName.length > 0) {\n      if (!line[0]) {\n        row = null;\n        continue;\n      } else {\n        if (!line[2]) {\n          row = null;\n          continue;\n        }\n      }\n\n      data = {};\n\n      for (j = 0, len2 = options.columnName.length; j < len2; j++) {\n        if (typeof line[j] !== 'undefined') {\n          row = line[j];\n          row = row.replace(/^\"(.+)?\"$/, '$1');\n          row = row.replace(/\\r/, '');\n          row = row.replace(/\\n/, '');\n        } else {\n          row = null;\n        }\n\n        data[options.columnName[j]] = row;\n      }\n\n      json.unshift(data);\n    } else {\n      json.unshift(line);\n    }\n  }\n\n  return json;\n};\n\nvar jsonObj = csvToJson(getCsvData(tagetFile), {\n  header: 1,\n  columnName: ['検査日時', '実施数', '陽性者数', '陰性者数']\n});\n\nconst CovidInspection = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contWrapper w-100 py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contTitle\",\n      children: \"\\u691C\\u67FB\\u967D\\u6027\\u8005\\u6570\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"of-y-scrl px-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chartWrapper\",\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            className: \"graphLTR\",\n            width: 5120,\n            height: 320,\n            data: jsonObj,\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"\\u691C\\u67FB\\u65E5\\u6642\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"\\u967D\\u6027\\u8005\\u6570\",\n              stackId: \"a\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"graphCaption mb-3\",\n          children: \"\\uFF08\\u6CE8\\uFF09\\u5065\\u5EB7\\u798F\\u7949\\u90E8\\u5831\\u544A\\u5F8C\\u306B\\u5224\\u660E\\u3057\\u305F\\u967D\\u6027\\u4EF6\\u6570\\u306F\\u7FCC\\u65E5\\u516C\\u8868\\u3068\\u306A\\u308B\\u305F\\u3081\\u3001\\u5224\\u660E\\u65E5\\u3068\\u516C\\u8868\\u65E5\\u3067\\u4EF6\\u6570\\u306B\\u5DEE\\u7570\\u304C\\u751F\\u3058\\u308B\\u5834\\u5408\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"graphCaption text-right mt-3 px-3\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://opendata.pref.aomori.lg.jp/dataset/1531.html\",\n          class: \"covidLink\",\n          target: \"_blank\",\n          children: \"\\u51FA\\u5178\\u5143\\uFF1A\\u9752\\u3044\\u68EE\\u30AA\\u30FC\\u30D7\\u30F3\\u30C7\\u30FC\\u30BF\\u30AB\\u30BF\\u30ED\\u30B0 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CovidInspection;\nexport default CovidInspection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidInspection\");","map":{"version":3,"sources":["/Users/dailytohoku/AWS/react/covid/src/covid-carrier-number.js"],"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","require","tagetFile","getCsvData","dataPath","request","XMLHttpRequest","open","send","lastMod","Date","getResponseHeader","responseText","csvToJson","csvStr","userOptions","options","header","columnName","ignoreBlankLine","rows","split","json","line","row","data","i","len","j","len2","length","replace","unshift","jsonObj","CovidInspection","props","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,aAAvC,EAAsDC,OAAtD,EAA+DC,MAA/D,QAA6E,UAA7E;AACA,OAAO,WAAP;;;AAEAC,OAAO,CAAE,UAAF,CAAP;;AAEA,MAAMC,SAAS,GAAG,eAAlB;;AAEA,IAAIC,UAAU,GAAIC,QAAD,IAAc;AAC7B,QAAMC,OAAO,GAAG,IAAIC,cAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,QAApB,EAA8B,KAA9B;AACDC,EAAAA,OAAO,CAACG,IAAR,CAAa,IAAb;AACC,MAAIC,OAAO,GAAG,IAAIC,IAAJ,CAASL,OAAO,CAACM,iBAAR,CAA0B,eAA1B,CAAT,CAAd;AACA,SAAON,OAAO,CAACO,YAAf;AACD,CAND;;AAQA,IAAIC,SAAS,GAAG,CAACC,MAAD,EAASC,WAAT,KAAyB;AACvC,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAO,IAAP;AACD;;AAAA;AACD,MAAIE,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAG,CAAX;AAAcC,IAAAA,UAAU,EAAG,EAA3B;AAA+BC,IAAAA,eAAe,EAAG;AAAjD,GAAd;;AACA,MAAIJ,WAAJ,EAAiB;AACf,QAAIA,WAAW,CAACE,MAAhB,EAAwBD,OAAO,CAACC,MAAR,GAAiBF,WAAW,CAACE,MAA7B;AACxB,QAAIF,WAAW,CAACG,UAAhB,EAA4BF,OAAO,CAACE,UAAR,GAAqBH,WAAW,CAACG,UAAjC;AAC7B;;AACD,MAAIE,IAAI,GAAGN,MAAM,CAACO,KAAP,CAAa,IAAb,CAAX;AACA,MAAIC,IAAI,GAAG,EAAX;AAAA,MAAeC,IAAI,GAAG,EAAtB;AAAA,MAA0BC,GAAG,GAAG,EAAhC;AAAA,MAAoCC,IAAI,GAAG,EAA3C;AACA,MAAIC,CAAJ,EAAOC,GAAP,EAAYC,CAAZ,EAAeC,IAAf;;AACA,OAAKH,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGP,IAAI,CAACU,MAAvB,EAA+BJ,CAAC,GAAGC,GAAnC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,QAAKA,CAAC,GAAG,CAAL,IAAWV,OAAO,CAACC,MAAvB,EAA+B;AAC/B,QAAID,OAAO,CAACG,eAAR,IAA2BC,IAAI,CAACM,CAAD,CAAJ,KAAY,EAA3C,EAA+C;AAC/CH,IAAAA,IAAI,GAAGH,IAAI,CAACM,CAAD,CAAJ,CAAQL,KAAR,CAAc,GAAd,CAAP;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;;AACI,QAAIL,OAAO,CAACE,UAAR,CAAmBY,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,UAAG,CAACP,IAAI,CAAC,CAAD,CAAR,EAAa;AACXC,QAAAA,GAAG,GAAG,IAAN;AACA;AACD,OAHD,MAGM;AACJ,YAAG,CAACD,IAAI,CAAC,CAAD,CAAR,EAAa;AACXC,UAAAA,GAAG,GAAG,IAAN;AACA;AACD;AACF;;AACDC,MAAAA,IAAI,GAAG,EAAP;;AACA,WAAKG,CAAC,GAAG,CAAJ,EAAOC,IAAI,GAAGb,OAAO,CAACE,UAAR,CAAmBY,MAAtC,EAA8CF,CAAC,GAAGC,IAAlD,EAAwDD,CAAC,EAAzD,EAA6D;AAC3D,YAAI,OAAOL,IAAI,CAACK,CAAD,CAAX,KAAmB,WAAvB,EAAoC;AAClCJ,UAAAA,GAAG,GAAGD,IAAI,CAACK,CAAD,CAAV;AACAJ,UAAAA,GAAG,GAAGA,GAAG,CAACO,OAAJ,CAAY,WAAZ,EAAyB,IAAzB,CAAN;AACAP,UAAAA,GAAG,GAAGA,GAAG,CAACO,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAN;AACAP,UAAAA,GAAG,GAAGA,GAAG,CAACO,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAN;AACD,SALD,MAKO;AACLP,UAAAA,GAAG,GAAG,IAAN;AACD;;AACDC,QAAAA,IAAI,CAACT,OAAO,CAACE,UAAR,CAAmBU,CAAnB,CAAD,CAAJ,GAA8BJ,GAA9B;AACD;;AACDF,MAAAA,IAAI,CAACU,OAAL,CAAaP,IAAb;AACD,KAvBD,MAuBO;AACLH,MAAAA,IAAI,CAACU,OAAL,CAAaT,IAAb;AACD;AACF;;AACD,SAAOD,IAAP;AACD,CAnDD;;AAqDA,IAAIW,OAAO,GAAGpB,SAAS,CAACV,UAAU,CAACD,SAAD,CAAX,EAAwB;AAAEe,EAAAA,MAAM,EAAG,CAAX;AAAcC,EAAAA,UAAU,EAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,MAAxB;AAA3B,CAAxB,CAAvB;;AAEA,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AACjC,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,SAAS,EAAC,UADZ;AAEE,YAAA,KAAK,EAAE,IAFT;AAGE,YAAA,MAAM,EAAE,GAHV;AAIE,YAAA,IAAI,EAAEF,OAJR;AAKE,YAAA,MAAM,EAAE;AACNG,cAAAA,GAAG,EAAE,EADC;AAENC,cAAAA,KAAK,EAAE,EAFD;AAGNC,cAAAA,IAAI,EAAE,EAHA;AAINC,cAAAA,MAAM,EAAE;AAJF,aALV;AAAA,oCAYE,QAAC,aAAD;AAAe,cAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAZF,eAaE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBAdF,eAeE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAfF,eAgBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAiBE,QAAC,GAAD;AAAK,cAAA,OAAO,EAAC,0BAAb;AAAoB,cAAA,OAAO,EAAC,GAA5B;AAAgC,cAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAsBE;AAAK,UAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2BE;AAAK,QAAA,KAAK,EAAC,mCAAX;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,sDAAR;AAA+D,UAAA,KAAK,EAAC,WAArE;AAAiF,UAAA,MAAM,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAvCD;;KAAML,e;AAyCN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport { BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './App.css';\n\nrequire ('./lib.js');\n\nconst tagetFile = './data/04.csv';\n\nvar getCsvData = (dataPath) => {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", dataPath, false);\n\trequest.send(null);\n  let lastMod = new Date(request.getResponseHeader(\"last-modified\"));\n  return request.responseText;\n};\n\nvar csvToJson = (csvStr, userOptions) => {\n  if (typeof csvStr !== 'string') {\n    return null\n  };\n  var options = { header : 0, columnName : [], ignoreBlankLine : true };\n  if (userOptions) {\n    if (userOptions.header) options.header = userOptions.header;\n    if (userOptions.columnName) options.columnName = userOptions.columnName;\n  }\n  var rows = csvStr.split('\\n');\n  var json = [], line = [], row = '', data = {};\n  var i, len, j, len2;\n  for (i = 0, len = rows.length; i < len; i++) {\n    if ((i + 1) <= options.header) continue;\n    if (options.ignoreBlankLine && rows[i] === '') continue;\n    line = rows[i].split(',');\n    /*\n    [\"2020年4月7日\", \"18\", \"1\", \"17\"]\n    0（検査日時）: \"2020年4月7日\"\n    1（実施数）: \"18\"\n    2（陽性者数）: \"1\"\n    3（陰性者数）: \"17\"\n    */\n    if (options.columnName.length > 0) {\n      if(!line[0]) {\n        row = null;\n        continue;\n      }else {\n        if(!line[2]) {\n          row = null;\n          continue;\n        }\n      }\n      data = {};\n      for (j = 0, len2 = options.columnName.length; j < len2; j++) {\n        if (typeof line[j] !== 'undefined') {\n          row = line[j];\n          row = row.replace(/^\"(.+)?\"$/, '$1');\n          row = row.replace(/\\r/, '');\n          row = row.replace(/\\n/, '');\n        } else {\n          row = null;\n        }\n        data[options.columnName[j]] = row;\n      }\n      json.unshift(data);\n    } else {\n      json.unshift(line);\n    }\n  }\n  return json;\n};\n\nvar jsonObj = csvToJson(getCsvData(tagetFile), { header : 1, columnName : ['検査日時', '実施数', '陽性者数', '陰性者数'] });\n\nconst CovidInspection = (props) => {\n  return(\n    <div className=\"contWrapper w-100 py-4\">\n      <div className=\"contTitle\">\n        検査陽性者数\n      </div>\n      <div className=\"contBody\">\n        <div className=\"of-y-scrl px-3\">\n          <div className=\"chartWrapper\">\n            <BarChart\n              className=\"graphLTR\"\n              width={5120}\n              height={320}\n              data={jsonObj}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"検査日時\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"陽性者数\" stackId=\"a\" fill=\"#8884d8\" />\n            </BarChart>\n          </div>\n          <div class=\"graphCaption mb-3\">\n            （注）健康福祉部報告後に判明した陽性件数は翌日公表となるため、判明日と公表日で件数に差異が生じる場合があります。\n          </div>\n        </div>\n        <div class=\"graphCaption text-right mt-3 px-3\">\n          <a href=\"https://opendata.pref.aomori.lg.jp/dataset/1531.html\" class=\"covidLink\" target=\"_blank\">出典元：青い森オープンデータカタログ </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CovidInspection;"]},"metadata":{},"sourceType":"module"}